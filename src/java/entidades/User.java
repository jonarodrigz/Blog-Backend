package entidades;
// Generated 03-31-2022 02:20:20 PM by Hibernate Tools 4.3.1


import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonIgnore;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import javax.json.bind.annotation.JsonbTransient;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;


/**
 * User generated by hbm2java
 */
@Entity
@Table(name="user"
    ,catalog="blog"
)
public class User  implements java.io.Serializable {


     private Integer idUser;
     private Typeuser typeuser;
     private String name;
     private String lastname;
     private String username;
     private String email;
     private String password;
     private String image;
     private Integer status;
     private Date createdAt;
     private List<Post> posts = new ArrayList<>();

    public User() {
    }

    public User(Typeuser typeuser, String name, String lastname, String username, String email, String password, String image, Integer status, Date createdAt, List<Post> posts) {
       this.typeuser = typeuser;
       this.name = name;
       this.lastname = lastname;
       this.username = username;
       this.email = email;
       this.password = password;
       this.image = image;
       this.status = status;
       this.createdAt = createdAt;
       this.posts = posts;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="idUser", unique=true, nullable=false)
    public Integer getIdUser() {
        return this.idUser;
    }
    
    public void setIdUser(Integer idUser) {
        this.idUser = idUser;
    }

    @JsonbTransient
    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name = "type_user")
     public Typeuser getTypeuser() {
        return this.typeuser;
    }
    
    public void setTypeuser(Typeuser typeuser) {
        this.typeuser = typeuser;
    }

    
    @Column(name="name", length=50)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="lastname", length=50)
    public String getLastname() {
        return this.lastname;
    }
    
    public void setLastname(String lastname) {
        this.lastname = lastname;
    }

    
    @Column(name="username", length=50)
    public String getUsername() {
        return this.username;
    }
    
    public void setUsername(String username) {
        this.username = username;
    }

    
    @Column(name="email", length=250)
    public String getEmail() {
        return this.email;
    }
    
    public void setEmail(String email) {
        this.email = email;
    }

    
    @Column(name="password", length=50)
    public String getPassword() {
        return this.password;
    }
    
    public void setPassword(String password) {
        this.password = password;
    }

    
    @Column(name="image", length=250)
    public String getImage() {
        return this.image;
    }
    
    public void setImage(String image) {
        this.image = image;
    }

    
    @Column(name="status")
    public Integer getStatus() {
        return this.status;
    }
    
    public void setStatus(Integer status) {
        this.status = status;
    }

//    @Temporal(TemporalType.DATE)
//    @Column(name="created_at", length=10)
//    public Date getCreatedAt() {
//        return this.createdAt;
//    }
//    
//    public void setCreatedAt(Date createdAt) {
//        this.createdAt = createdAt;
//    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="user")
    public List<Post> getPosts() {
        return this.posts;
    }
    
    public void setPosts(List<Post> posts) {
        this.posts = posts;
    }

    @Override
    public String toString() {
        return "User{" + "idUser=" + idUser + ", name=" + name + '}';
    }

}


